jobs:
- job: Build_Packages

  pool:
    vmImage: 'windows-2022'

  variables:
    NUGET_PACKAGES: $(Pipeline.Workspace)\.nuget\packages
    RestoreLockedMode: false # Until https://github.com/NuGet/Home/issues/8645
    RestoreForceEvaluate: true

  steps:

  - task: CacheBeta@0
    inputs:
      key: nuget | **/packages.lock.json
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages
     
  - task: gitversion/setup@0
    retryCountOnTaskFailure: 3
    inputs:
      versionSpec: '5.10.3'

  - task: gitversion/execute@0
    retryCountOnTaskFailure: 3
    inputs:
      updateAssemblyInfo: 'False'
      useConfigFile: true
      configFilePath: gitversion.yml
    displayName: Use GitVersion

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.7.0
      checkLatest: false

  - task: UseDotNet@2
    displayName: Install .NET Core 3.1 CLI
    inputs:
      version: 3.1.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: UseDotNet@2
    displayName: Install .NET Core 5.0.103 CLI
    inputs:
      version: 5.0.103
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: UseDotNet@2
    displayName: 'Install .NET 6.0.100-preview.6.21355.2 SDK'
    inputs:
      version: 6.0.100-preview.6.21355.2
      includePreviewVersions: true
      installationPath: $(Agent.ToolsDirectory)/dotnet
      
  - powershell: .\build\build.ps1 -script build\build.cake
    displayName: Build

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)
      Contents: '$(build.sourcesdirectory)\build\*.nupkg'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      SignPackageName: "Uno Source Generation Tasks"
      SignPackageDescription: "Uno Source Generation Tasks"
      ArtifactDirectory: $(build.artifactstagingdirectory)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: DotNetCoreCLI@2
    displayName: Validate DotNetCore CLI build
    inputs:
      command: build
      arguments: "--configuration Release"
      workingDirectory: $(build.sourcesdirectory)\src\Uno.SampleCoreApp

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: unosourcegenerator-drop
      ArtifactType: Container

- job: Windows_VS2022
  dependsOn:
  - Build_Packages

  variables:
    SAMPLES_BUILD: true
    NUGET_PACKAGES: $(Pipeline.Workspace)\.nuget\packages
    RestoreLockedMode: false # Until https://github.com/NuGet/Home/issues/8645

  pool:
    vmImage: 'windows-2022'

  strategy:
    matrix:
      NetCore_9_0_100:
        NETCORE_VERSION: 9.0.100
        NETCORE_PREVIEW: True
      NetCore_8_0_100:
        NETCORE_VERSION: 8.0.100
        NETCORE_PREVIEW: True
      NetCore_7_0_306:
        NETCORE_VERSION: 7.0.306
      NetCore_7_0_100_Preview:
        NETCORE_VERSION: 7.0.100-preview.6.22352.1
        NETCORE_PREVIEW: True
      NetCore_6_0_302:
        NETCORE_VERSION: 6.0.302
        NETCORE_PREVIEW: False
      NetCore_6_0_300:
        NETCORE_VERSION: 6.0.300
        NETCORE_PREVIEW: False
      NetCore_6_0_100:
        NETCORE_VERSION: 6.0.100
        NETCORE_PREVIEW: False
      NetCore_5_0:
        NETCORE_VERSION: 5.0.x
        NETCORE_PREVIEW: False
      NetCore_3_1:
        NETCORE_VERSION: 3.1.x
        NETCORE_PREVIEW: False

  steps:

  - task: CacheBeta@0
    inputs:
      key: nuget | **/packages.lock.json
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages
     
  - task: gitversion/setup@0
    retryCountOnTaskFailure: 3
    inputs:
      versionSpec: '5.10.3'

  - task: gitversion/execute@0
    retryCountOnTaskFailure: 3
    inputs:
      updateAssemblyInfo: 'False'
      useConfigFile: true
      configFilePath: gitversion.yml
    displayName: Use GitVersion

  - task: DownloadBuildArtifacts@0
    inputs:
      ArtifactName: unosourcegenerator-drop
      downloadPath: '$(System.ArtifactsDirectory)'

  - task: CopyFiles@2
    inputs:
        sourceFolder: '$(System.ArtifactsDirectory)\unosourcegenerator-drop\build'
        targetFolder: $(build.sourcesdirectory)\src\PackageCache
      
  - task: MSBuild@1
    inputs:
      solution: '$(build.sourcesdirectory)/src/Uno.SourceGenerator.Samples.Windows.sln'
      msbuildArguments: /m /r /p:configuration=Release /p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /bl:$(build.artifactstagingdirectory)/binlog/windows-sample-build.binlog

  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core $(NETCORE_VERSION) CLI
    inputs:
      version: $(NETCORE_VERSION)
      includePreviewVersions: $(NETCORE_PREVIEW)
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    displayName: Validate .NET Core $(NETCORE_VERSION) CLI build
    inputs:
      command: build
      arguments: "--configuration Release -p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /bl:$(build.artifactstagingdirectory)/binlog/windows-sample-build-netcore.binlog"
      workingDirectory: $(build.sourcesdirectory)/src/Uno.SampleCoreApp
            
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/binlog
      ArtifactName: unosourcegenerator-binlog
      ArtifactType: Container

- job: Linux

  dependsOn:
  - Build_Packages

  strategy:
    matrix:
      NetCore_9_0_100:
        NETCORE_VERSION: 9.0.100
        NETCORE_PREVIEW: false
      NetCore_8_0_100:
        NETCORE_VERSION: 8.0.100
        NETCORE_PREVIEW: false
      NetCore_7_0_306:
        NETCORE_VERSION: 7.0.306
      NetCore_6_0_302:
        NETCORE_VERSION: 6.0.302
        NETCORE_PREVIEW: False
      NetCore_6_0_300:
        NETCORE_VERSION: 6.0.300
        NETCORE_PREVIEW: False
      NetCore_6_0_100:
        NETCORE_VERSION: 6.0.100
        NETCORE_PREVIEW: False
      NetCore_5_0:
        NETCORE_VERSION: 5.0.x
        NETCORE_PREVIEW: False
      NetCore_3_1:
        NETCORE_VERSION: 3.1.x
        NETCORE_PREVIEW: False

  container: unoplatform/wasm-build:2.2

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
    RestoreLockedMode: false # Until https://github.com/NuGet/Home/issues/8645

  steps:

  - task: CacheBeta@0
    inputs:
      key: nuget | **/packages.lock.json
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages

  # 2.1 is required for GitVersion@5
  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core 2.1 CLI
    inputs:
      version: 2.1.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  # 3.1 is required for Source Generation sample
  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core 3.1 CLI
    inputs:
      version: 3.1.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: gitversion/setup@0
    retryCountOnTaskFailure: 3
    inputs:
      versionSpec: '5.10.3'

  - task: gitversion/execute@0
    retryCountOnTaskFailure: 3
    inputs:
      updateAssemblyInfo: 'False'
      useConfigFile: true
      configFilePath: gitversion.yml
    displayName: Use GitVersion

  - task: DownloadBuildArtifacts@0
    inputs:
      ArtifactName: unosourcegenerator-drop
      downloadPath: '$(System.ArtifactsDirectory)'

  - task: CopyFiles@2
    inputs:
        sourceFolder: '$(System.ArtifactsDirectory)/unosourcegenerator-drop/build'
        targetFolder: $(build.sourcesdirectory)/src/PackageCache

  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core $(NETCORE_VERSION) CLI
    inputs:
      version: $(NETCORE_VERSION)
      includePreviewVersions: $(NETCORE_PREVIEW)
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - bash: msbuild /r /p:Configuration=Release /p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /p:SAMPLES_BUILD=true ./src/Uno.SourceGenerator.Samples.Unix.sln /bl:$(build.artifactstagingdirectory)/binlog/linux-sample-build.binlog
    displayName: Build

    
  - task: DotNetCoreCLI@2
    displayName: Validate .NET Core CLI build
    inputs:
      command: build
      arguments: "--configuration Release -p:SAMPLES_BUILD=true -p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /bl:$(build.artifactstagingdirectory)/binlog/linux-sample-build-netcore.binlog"
      workingDirectory: $(build.sourcesdirectory)/src/Uno.SampleCoreApp
      
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/binlog
      ArtifactName: unosourcegenerator-binlog
      ArtifactType: Container

- job: macOS

  dependsOn:
  - Build_Packages

  variables:
    NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
    RestoreLockedMode: false # Until https://github.com/NuGet/Home/issues/8645

  strategy:
    matrix:
      NET_9_0_100:
         VM_Image: 'macOS-13'
         NETCORE_VERSION: 9.0.100
         NETCORE_PREVIEW: False
      NET_8_0_100_Preview_macos13:
         VM_Image: 'macOS-13'
         NETCORE_VERSION: 8.0.100
         NETCORE_PREVIEW: False
      NET_7_0_100_macos13:
         VM_Image: 'macOS-13'
         NETCORE_VERSION: 7.0.306
         NETCORE_PREVIEW: False

  pool:
    vmImage: $(VM_Image)

  steps:
 
  # 2.1 is required for GitVersion@5
  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core 2.1 CLI
    inputs:
      version: 2.1.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  # 3.1 is required for Source Generation sample
  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core 3.1.x CLI
    inputs:
      version: 3.1.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
     
  - task: gitversion/setup@0
    retryCountOnTaskFailure: 3
    inputs:
      versionSpec: '5.10.3'

  - task: gitversion/execute@0
    retryCountOnTaskFailure: 3
    inputs:
      updateAssemblyInfo: 'False'
      useConfigFile: true
      configFilePath: gitversion.yml
    displayName: Use GitVersion

  - task: CacheBeta@0
    inputs:
      key: nuget | **/packages.lock.json
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages

  - task: DownloadBuildArtifacts@0
    inputs:
      ArtifactName: unosourcegenerator-drop
      downloadPath: '$(System.ArtifactsDirectory)'

  - task: CopyFiles@2
    inputs:
        sourceFolder: '$(System.ArtifactsDirectory)/unosourcegenerator-drop/build'
        targetFolder: $(build.sourcesdirectory)/src/PackageCache

  - task: DotNetCoreInstaller@2
    inputs:
      version: $(NETCORE_VERSION)
      includePreviewVersions: $(NETCORE_PREVIEW)
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - bash: dotnet build -c Release /p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /p:SAMPLES_BUILD=true ./src/Uno.SourceGenerator.Samples.Unix.sln /bl:$(build.artifactstagingdirectory)/binlog/macos-sample-build-$(XamarinVersion).binlog
    displayName: Build

  - bash: |
      cd $(build.sourcesdirectory)/src/Uno.SampleCoreApp
      dotnet build --configuration Release -p:SAMPLES_BUILD=true -p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /bl:$(build.artifactstagingdirectory)/binlog/macos-sample-build-$(XamarinVersion)-netcore.binlog
    displayName: Validate .NET Core CLI build
      
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/binlog
      ArtifactName: unosourcegenerator-binlog
      ArtifactType: Container
